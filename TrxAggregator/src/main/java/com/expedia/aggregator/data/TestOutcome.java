//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.08.26 at 08:47:47 PM IST 
//


package com.expedia.aggregator.data;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TestOutcome.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TestOutcome">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Error"/>
 *     &lt;enumeration value="Failed"/>
 *     &lt;enumeration value="Timeout"/>
 *     &lt;enumeration value="Aborted"/>
 *     &lt;enumeration value="Inconclusive"/>
 *     &lt;enumeration value="PassedButRunAborted"/>
 *     &lt;enumeration value="NotRunnable"/>
 *     &lt;enumeration value="NotExecuted"/>
 *     &lt;enumeration value="Disconnected"/>
 *     &lt;enumeration value="Warning"/>
 *     &lt;enumeration value="Passed"/>
 *     &lt;enumeration value="Completed"/>
 *     &lt;enumeration value="InProgress"/>
 *     &lt;enumeration value="Pending"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "TestOutcome")
@XmlEnum
public enum TestOutcome {

    @XmlEnumValue("Error")
    ERROR("Error"),
    @XmlEnumValue("Failed")
    FAILED("Failed"),
    @XmlEnumValue("Timeout")
    TIMEOUT("Timeout"),
    @XmlEnumValue("Aborted")
    ABORTED("Aborted"),
    @XmlEnumValue("Inconclusive")
    INCONCLUSIVE("Inconclusive"),
    @XmlEnumValue("PassedButRunAborted")
    PASSED_BUT_RUN_ABORTED("PassedButRunAborted"),
    @XmlEnumValue("NotRunnable")
    NOT_RUNNABLE("NotRunnable"),
    @XmlEnumValue("NotExecuted")
    NOT_EXECUTED("NotExecuted"),
    @XmlEnumValue("Disconnected")
    DISCONNECTED("Disconnected"),
    @XmlEnumValue("Warning")
    WARNING("Warning"),
    @XmlEnumValue("Passed")
    PASSED("Passed"),
    @XmlEnumValue("Completed")
    COMPLETED("Completed"),
    @XmlEnumValue("InProgress")
    IN_PROGRESS("InProgress"),
    @XmlEnumValue("Pending")
    PENDING("Pending");
    private final String value;

    TestOutcome(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TestOutcome fromValue(String v) {
        for (TestOutcome c: TestOutcome.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
